name: Upload Python Package

on:
  release:
    types: [created]

jobs:
  deploy-sdist:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    - uses: actions/setup-python@v4
      with:
        python-version: '3.x'
    - name: install-deps
      run: |
        python -m pip install --upgrade pip
        pip install build twine
    - name: build
      run: |
        python -m build --sdist
    - name: upload
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
      run: |
        twine upload dist/*

  deploy-bdist-manylinux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    - uses: actions/setup-python@v4
      with:
        python-version: '3.x'
    - name: install-deps
      run: |
        python -m pip install --upgrade pip
        pip install build twine cibuildwheel
    - name: build
      env:
        CIBW_SKIP: "cp27-* pp27-* cp35-* pp310-* pp311-* pp312-* pp313-* *musllinux*"  # skip Python 2.7 wheels and musllinux
      run: |
        python -m cibuildwheel --output-dir wheelhouse
    - name: upload
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
      run: |
        twine upload wheelhouse/*

  deploy-bdist-macos:
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.8, 3.9, '3.10', '3.11', '3.12']
        os: ['macos-latest']
        architecture: ['x64']
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
      with:
        python-version: ${{ matrix.python-version }}
    - uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: install-deps
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install build twine
    - name: build
      run: |
        python -m build --wheel
    - name: upload
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
      run: |
        twine upload dist/*

  deploy-bdist-windows:
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.8, 3.9, '3.10', '3.11', '3.12']
        os: ['windows-latest']
        architecture: ['x64']
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: install-deps
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install build twine
    - name: build
      run: |
        python -m build --wheel
    - name: upload
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
      run: |
        twine upload dist/*
